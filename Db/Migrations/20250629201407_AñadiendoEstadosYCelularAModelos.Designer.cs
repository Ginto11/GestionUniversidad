// <auto-generated />
using System;
using GestionUniversidad.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestionUniversidad.Db.Migrations
{
    [DbContext(typeof(Database))]
    [Migration("20250629201407_AñadiendoEstadosYCelularAModelos")]
    partial class AñadiendoEstadosYCelularAModelos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestionUniversidad.Models.Docente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_docente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("apellido");

                    b.Property<int>("Cedula")
                        .HasColumnType("int")
                        .HasColumnName("cedula");

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("contrasena");

                    b.Property<int>("Edad")
                        .HasColumnType("int")
                        .HasColumnName("edad");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit")
                        .HasColumnName("estado");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion");

                    b.Property<int>("GeneroId")
                        .HasMaxLength(10)
                        .HasColumnType("int")
                        .HasColumnName("id_genero");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre");

                    b.Property<int>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("id_rol");

                    b.HasKey("Id");

                    b.HasIndex("Cedula")
                        .IsUnique();

                    b.HasIndex("GeneroId");

                    b.HasIndex("RolId");

                    b.ToTable("docentes");
                });

            modelBuilder.Entity("GestionUniversidad.Models.EstadoMateria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_estado_materia");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NombreEstado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("nombre_estado");

                    b.HasKey("Id");

                    b.ToTable("estado_materia");
                });

            modelBuilder.Entity("GestionUniversidad.Models.EstadoMatricula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_estado_matricula");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NombreEstado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("nombre_estado");

                    b.HasKey("Id");

                    b.ToTable("estado_matricula");
                });

            modelBuilder.Entity("GestionUniversidad.Models.Estudiante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_estudiante");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("apellido");

                    b.Property<int>("Cedula")
                        .HasColumnType("int")
                        .HasColumnName("cedula");

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("celular");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("contrasena");

                    b.Property<int>("Edad")
                        .HasColumnType("int")
                        .HasColumnName("edad");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("email");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit")
                        .HasColumnName("estado");

                    b.Property<DateTime>("FechaActualizacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_actualizacion");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_creacion");

                    b.Property<int>("GeneroId")
                        .HasMaxLength(10)
                        .HasColumnType("int")
                        .HasColumnName("id_genero");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nombre");

                    b.Property<int>("RolId")
                        .HasColumnType("int")
                        .HasColumnName("id_rol");

                    b.HasKey("Id");

                    b.HasIndex("Cedula")
                        .IsUnique();

                    b.HasIndex("GeneroId");

                    b.HasIndex("RolId");

                    b.ToTable("estudiantes");
                });

            modelBuilder.Entity("GestionUniversidad.Models.Facultad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_facultad");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("nombre");

                    b.HasKey("Id");

                    b.ToTable("facultades");
                });

            modelBuilder.Entity("GestionUniversidad.Models.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_genero");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("nombre_genero");

                    b.HasKey("Id");

                    b.ToTable("generos");
                });

            modelBuilder.Entity("GestionUniversidad.Models.InscribirMateria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_inscripcion");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CostoInscripcion")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("costo_inscripcion");

                    b.Property<int>("MateriaId")
                        .HasColumnType("int")
                        .HasColumnName("id_materia");

                    b.Property<int?>("MatriculaId")
                        .HasColumnType("int")
                        .HasColumnName("id_matricula");

                    b.HasKey("Id");

                    b.HasIndex("MateriaId");

                    b.HasIndex("MatriculaId");

                    b.ToTable("inscribir_materia");
                });

            modelBuilder.Entity("GestionUniversidad.Models.Materia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_materia");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("CostoTotal")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("costo_total");

                    b.Property<int>("Creditos")
                        .HasColumnType("int")
                        .HasColumnName("creditos");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)")
                        .HasColumnName("descripcion");

                    b.Property<int>("DocenteId")
                        .HasColumnType("int")
                        .HasColumnName("id_docente");

                    b.Property<int?>("EstadoMateriaId")
                        .HasColumnType("int")
                        .HasColumnName("id_estado_materia");

                    b.Property<int?>("HorasEstudio")
                        .HasColumnType("int")
                        .HasColumnName("horas_estudio");

                    b.Property<string>("Modalidad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("modalidad");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("nombre");

                    b.Property<int>("ProgramaId")
                        .HasColumnType("int")
                        .HasColumnName("id_programa");

                    b.Property<decimal>("ValorCredito")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("valor_credito");

                    b.HasKey("Id");

                    b.HasIndex("DocenteId");

                    b.HasIndex("EstadoMateriaId");

                    b.HasIndex("ProgramaId");

                    b.ToTable("materias");
                });

            modelBuilder.Entity("GestionUniversidad.Models.Matricula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_matricula");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("CostoMatricula")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("costo_matricula");

                    b.Property<bool>("EstaPaga")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("esta_paga");

                    b.Property<int>("EstadoMatriculaId")
                        .HasColumnType("int")
                        .HasColumnName("estado_matricula");

                    b.Property<int>("EstudianteId")
                        .HasColumnType("int")
                        .HasColumnName("id_estudiante");

                    b.Property<DateTime>("FechaMatricula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("fecha_matricula")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("Semestre")
                        .HasColumnType("int")
                        .HasColumnName("semestre");

                    b.HasKey("Id");

                    b.HasIndex("EstadoMatriculaId");

                    b.HasIndex("EstudianteId");

                    b.ToTable("matriculas");
                });

            modelBuilder.Entity("GestionUniversidad.Models.Programa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_programa");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("descripcion");

                    b.Property<byte>("Duracion")
                        .HasColumnType("tinyint")
                        .HasColumnName("duracion");

                    b.Property<int>("FacultadId")
                        .HasColumnType("int")
                        .HasColumnName("id_facultad");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("nombre");

                    b.Property<string>("RutaImagen")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ruta_imagen");

                    b.HasKey("Id");

                    b.HasIndex("FacultadId");

                    b.ToTable("programas");
                });

            modelBuilder.Entity("GestionUniversidad.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_rol");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NombreRol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nombre_rol");

                    b.HasKey("Id");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("GestionUniversidad.Models.Docente", b =>
                {
                    b.HasOne("GestionUniversidad.Models.Genero", "Genero")
                        .WithMany("Docentes")
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionUniversidad.Models.Rol", "Rol")
                        .WithMany("Docentes")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genero");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("GestionUniversidad.Models.Estudiante", b =>
                {
                    b.HasOne("GestionUniversidad.Models.Genero", "Genero")
                        .WithMany("Estudiantes")
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionUniversidad.Models.Rol", "Rol")
                        .WithMany("Estudiantes")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genero");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("GestionUniversidad.Models.InscribirMateria", b =>
                {
                    b.HasOne("GestionUniversidad.Models.Materia", "Materia")
                        .WithMany()
                        .HasForeignKey("MateriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionUniversidad.Models.Matricula", "Matricula")
                        .WithMany("InscribirMateria")
                        .HasForeignKey("MatriculaId");

                    b.Navigation("Materia");

                    b.Navigation("Matricula");
                });

            modelBuilder.Entity("GestionUniversidad.Models.Materia", b =>
                {
                    b.HasOne("GestionUniversidad.Models.Docente", "Docente")
                        .WithMany("Materias")
                        .HasForeignKey("DocenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionUniversidad.Models.EstadoMateria", "EstadoMateria")
                        .WithMany("Materias")
                        .HasForeignKey("EstadoMateriaId");

                    b.HasOne("GestionUniversidad.Models.Programa", "Programa")
                        .WithMany("Materias")
                        .HasForeignKey("ProgramaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Docente");

                    b.Navigation("EstadoMateria");

                    b.Navigation("Programa");
                });

            modelBuilder.Entity("GestionUniversidad.Models.Matricula", b =>
                {
                    b.HasOne("GestionUniversidad.Models.EstadoMatricula", "EstadoMatricula")
                        .WithMany("Matriculas")
                        .HasForeignKey("EstadoMatriculaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestionUniversidad.Models.Estudiante", "Estudiante")
                        .WithMany()
                        .HasForeignKey("EstudianteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EstadoMatricula");

                    b.Navigation("Estudiante");
                });

            modelBuilder.Entity("GestionUniversidad.Models.Programa", b =>
                {
                    b.HasOne("GestionUniversidad.Models.Facultad", "Facultad")
                        .WithMany("Programas")
                        .HasForeignKey("FacultadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facultad");
                });

            modelBuilder.Entity("GestionUniversidad.Models.Docente", b =>
                {
                    b.Navigation("Materias");
                });

            modelBuilder.Entity("GestionUniversidad.Models.EstadoMateria", b =>
                {
                    b.Navigation("Materias");
                });

            modelBuilder.Entity("GestionUniversidad.Models.EstadoMatricula", b =>
                {
                    b.Navigation("Matriculas");
                });

            modelBuilder.Entity("GestionUniversidad.Models.Facultad", b =>
                {
                    b.Navigation("Programas");
                });

            modelBuilder.Entity("GestionUniversidad.Models.Genero", b =>
                {
                    b.Navigation("Docentes");

                    b.Navigation("Estudiantes");
                });

            modelBuilder.Entity("GestionUniversidad.Models.Matricula", b =>
                {
                    b.Navigation("InscribirMateria");
                });

            modelBuilder.Entity("GestionUniversidad.Models.Programa", b =>
                {
                    b.Navigation("Materias");
                });

            modelBuilder.Entity("GestionUniversidad.Models.Rol", b =>
                {
                    b.Navigation("Docentes");

                    b.Navigation("Estudiantes");
                });
#pragma warning restore 612, 618
        }
    }
}
